import _pt from 'prop-types'
import * as React from 'react'

const convertToKebabCase = str => {
  return str
    .replace(/([a-z])([A-Z])/g, '$1-$2')
    .replace(/\s+/g, '-')
    .toLowerCase()
}

const twPropKeys = [
  'srOnly',
  'notSrOnly',
  'content',
  'items',
  'self',
  'appearanceNone',
  'bg',
  'border',
  'rounded',
  'roundedT',
  'roundedR',
  'roundedB',
  'roundedL',
  'roundedTl',
  'roundedTr',
  'roundedBr',
  'roundedBl',
  'shadow',
  'cursor',
  'block',
  'inlineBlock',
  'inline',
  'flex',
  'inlineFlex',
  'table',
  'tableRow',
  'tableCell',
  'hidden',
  'fill',
  'flexGrow',
  'flexShrink',
  'float',
  'clearfix',
  'font',
  'text',
  'antialiased',
  'subpixelAntialiased',
  'italic',
  'notItalic',
  'h',
  'inset',
  'insetY',
  'insetX',
  'top',
  'right',
  'bottom',
  'left',
  'justify',
  'tracking',
  'leading',
  'list',
  'm',
  'my',
  'mx',
  'mt',
  'mr',
  'mb',
  'ml',
  'maxH',
  'maxW',
  'minH',
  'minW',
  'object',
  'opacity',
  'order',
  'outlineNone',
  'overflow',
  'overflowX',
  'overflowY',
  'scrolling',
  'p',
  'py',
  'px',
  'pt',
  'pr',
  'pb',
  'pl',
  'placeholder',
  'pointerEvents',
  'static',
  'fixed',
  'absolute',
  'relative',
  'sticky',
  'resize',
  'stroke',
  'underline',
  'lineThrough',
  'noUnderline',
  'uppercase',
  'lowercase',
  'capitalize',
  'normalCase',
  'select',
  'align',
  'visible',
  'invisible',
  'whitespace',
  'w',
  'break',
  'truncate',
  'z',
]

const resolveTwClasses = props => {
  const twProps = Object.keys(props)
    .filter(prop => twPropKeys.includes(prop))
    .reduce((acc, propName) => {
      acc[propName] = props[propName]
      return acc
    }, {})
  const remainingProps = Object.keys(props)
    .filter(prop => !twPropKeys.includes(prop))
    .reduce((acc, propName) => {
      acc[propName] = props[propName]
      return acc
    }, {})

  const resolveValue = ps => {
    const classes = []

    for (const propName in ps) {
      const kebabPropname = convertToKebabCase(propName)
      const value = ps[propName]

      if (value instanceof Array) {
        value.forEach(val =>
          classes.push(
            ...resolveValue({
              [propName]: val,
            })
          )
        )
        continue
      }

      if (typeof value === 'boolean' && value) {
        classes.push(kebabPropname)
        continue
      } // typeof value === string | number

      const strValue = String(value)
      const isNegative = strValue.startsWith('-')
      const prefix = isNegative ? '-' : ''
      classes.push(`${prefix}${kebabPropname}-${strValue}`)
    }

    return classes
  }

  const classes = resolveValue(twProps)
  return {
    classes: classes.join(' '),
    remainingProps,
  }
}

const Tw = props => {
  const { classes, remainingProps } = resolveTwClasses(props)
  const tag = props.is || 'div'
  return React.createElement(
    tag,
    { ...remainingProps, children: undefined, class: classes },
    props.children
  )
}

Tw.propTypes = {
  children: _pt.node,
  is: _pt.string,
  srOnly: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  notSrOnly: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  content: _pt.oneOfType([
    _pt.oneOf(['center', 'start', 'end', 'between', 'around']),
    _pt.arrayOf(_pt.oneOf(['center', 'start', 'end', 'between', 'around'])),
  ]),
  items: _pt.oneOfType([
    _pt.oneOf(['start', 'end', 'center', 'baseline', 'stretch']),
    _pt.arrayOf(_pt.oneOf(['start', 'end', 'center', 'baseline', 'stretch'])),
  ]),
  self: _pt.oneOfType([
    _pt.oneOf(['auto', 'start', 'end', 'center', 'stretch']),
    _pt.arrayOf(_pt.oneOf(['auto', 'start', 'end', 'center', 'stretch'])),
  ]),
  appearanceNone: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  bg: _pt.oneOfType([
    _pt.oneOf([
      'fixed',
      'local',
      'scroll',
      'transparent',
      'black',
      'white',
      'gray-100',
      'gray-200',
      'gray-300',
      'gray-400',
      'gray-500',
      'gray-600',
      'gray-700',
      'gray-800',
      'gray-900',
      'red-100',
      'red-200',
      'red-300',
      'red-400',
      'red-500',
      'red-600',
      'red-700',
      'red-800',
      'red-900',
      'orange-100',
    ]),
    _pt.arrayOf(
      _pt.oneOf([
        'fixed',
        'local',
        'scroll',
        'transparent',
        'black',
        'white',
        'gray-100',
        'gray-200',
        'gray-300',
        'gray-400',
        'gray-500',
        'gray-600',
        'gray-700',
        'gray-800',
        'gray-900',
        'red-100',
        'red-200',
        'red-300',
        'red-400',
        'red-500',
        'red-600',
        'red-700',
        'red-800',
        'red-900',
        'orange-100',
      ])
    ),
  ]),
  border: _pt.oneOfType([
    _pt.oneOfType([
      _pt.oneOf(['collapse']),
      _pt.oneOf(['separate']),
      _pt.oneOf(['transparent']),
      _pt.oneOf(['black']),
      _pt.oneOf(['white']),
      _pt.oneOf(['gray-100']),
      _pt.oneOf(['gray-200']),
      _pt.oneOf(['gray-300']),
      _pt.oneOf(['gray-400']),
      _pt.oneOf(['gray-500']),
      _pt.oneOf(['gray-600']),
      _pt.oneOf(['gray-700']),
      _pt.oneOf(['gray-800']),
      _pt.oneOf(['gray-900']),
      _pt.oneOf(['red-100']),
      _pt.oneOf(['red-200']),
      _pt.oneOf(['red-300']),
      _pt.oneOf(['red-400']),
      _pt.oneOf(['red-500']),
      _pt.oneOf(['red-600']),
      _pt.oneOf(['red-700']),
      _pt.oneOf(['red-800']),
      _pt.oneOf(['red-900']),
      _pt.oneOf(['orange-100']),
      _pt.oneOf(['orange-200']),
      _pt.oneOf(['orange-300']),
      _pt.oneOf(['orange-400']),
      _pt.oneOf(['orange-500']),
      _pt.oneOf(['orange-600']),
      _pt.oneOf(['orange-700']),
      _pt.oneOf(['orange-800']),
      _pt.oneOf(['orange-900']),
      _pt.oneOf(['yellow-100']),
      _pt.oneOf(['yellow-200']),
      _pt.oneOf(['yellow-300']),
      _pt.oneOf(['yellow-400']),
      _pt.oneOf(['yellow-500']),
      _pt.oneOf(['yellow-600']),
      _pt.oneOf(['yellow-700']),
      _pt.oneOf(['yellow-800']),
      _pt.oneOf(['yellow-900']),
      _pt.oneOf(['green-100']),
      _pt.oneOf(['green-200']),
      _pt.oneOf(['green-300']),
      _pt.oneOf(['green-400']),
      _pt.oneOf(['green-500']),
      _pt.oneOf(['green-600']),
      _pt.oneOf(['green-700']),
      _pt.oneOf(['green-800']),
      _pt.oneOf(['green-900']),
      _pt.oneOf(['teal-100']),
      _pt.oneOf(['teal-200']),
      _pt.oneOf(['teal-300']),
      _pt.oneOf(['teal-400']),
      _pt.oneOf(['teal-500']),
      _pt.oneOf(['teal-600']),
      _pt.oneOf(['teal-700']),
      _pt.oneOf(['teal-800']),
      _pt.oneOf(['teal-900']),
      _pt.oneOf(['blue-100']),
      _pt.oneOf(['blue-200']),
      _pt.oneOf(['blue-300']),
      _pt.oneOf(['blue-400']),
      _pt.oneOf(['blue-500']),
      _pt.oneOf(['blue-600']),
      _pt.oneOf(['blue-700']),
      _pt.oneOf(['blue-800']),
      _pt.oneOf(['blue-900']),
      _pt.oneOf(['indigo-100']),
      _pt.oneOf(['indigo-200']),
      _pt.oneOf(['indigo-300']),
      _pt.oneOf(['indigo-400']),
      _pt.oneOf(['indigo-500']),
      _pt.oneOf(['indigo-600']),
      _pt.oneOf(['indigo-700']),
      _pt.oneOf(['indigo-800']),
      _pt.oneOf(['indigo-900']),
      _pt.oneOf(['purple-100']),
      _pt.oneOf(['purple-200']),
      _pt.oneOf(['purple-300']),
      _pt.oneOf(['purple-400']),
      _pt.oneOf(['purple-500']),
      _pt.oneOf(['purple-600']),
      _pt.oneOf(['purple-700']),
      _pt.oneOf(['purple-800']),
      _pt.oneOf(['purple-900']),
      _pt.oneOf(['pink-100']),
      _pt.oneOf(['pink-200']),
      _pt.oneOf(['pink-300']),
      _pt.oneOf(['pink-400']),
      _pt.oneOf(['pink-500']),
      _pt.oneOf(['pink-600']),
      _pt.oneOf(['pink-700']),
      _pt.oneOf(['pink-800']),
      _pt.oneOf(['pink-900']),
      _pt.oneOf(['solid']),
      _pt.oneOf(['dashed']),
      _pt.oneOf(['dotted']),
      _pt.oneOf(['double']),
      _pt.oneOf(['none']),
      _pt.oneOf(['0']),
      _pt.oneOf([2]),
      _pt.oneOf([4]),
      _pt.oneOf([8]),
      _pt.oneOf(['t-0']),
      _pt.oneOf(['r-0']),
      _pt.oneOf(['b-0']),
      _pt.oneOf(['l-0']),
      _pt.oneOf(['t-2']),
      _pt.oneOf(['r-2']),
      _pt.oneOf(['b-2']),
      _pt.oneOf(['l-2']),
      _pt.oneOf(['t-4']),
      _pt.oneOf(['r-4']),
      _pt.oneOf(['b-4']),
      _pt.oneOf(['l-4']),
      _pt.oneOf(['t-8']),
      _pt.oneOf(['r-8']),
      _pt.oneOf(['b-8']),
      _pt.oneOf(['l-8']),
      _pt.oneOf(['t']),
      _pt.oneOf(['r']),
      _pt.oneOf(['b']),
      _pt.oneOf(['l']),
      _pt.bool,
    ]),
    _pt.arrayOf(
      _pt.oneOfType([
        _pt.oneOf(['collapse']),
        _pt.oneOf(['separate']),
        _pt.oneOf(['transparent']),
        _pt.oneOf(['black']),
        _pt.oneOf(['white']),
        _pt.oneOf(['gray-100']),
        _pt.oneOf(['gray-200']),
        _pt.oneOf(['gray-300']),
        _pt.oneOf(['gray-400']),
        _pt.oneOf(['gray-500']),
        _pt.oneOf(['gray-600']),
        _pt.oneOf(['gray-700']),
        _pt.oneOf(['gray-800']),
        _pt.oneOf(['gray-900']),
        _pt.oneOf(['red-100']),
        _pt.oneOf(['red-200']),
        _pt.oneOf(['red-300']),
        _pt.oneOf(['red-400']),
        _pt.oneOf(['red-500']),
        _pt.oneOf(['red-600']),
        _pt.oneOf(['red-700']),
        _pt.oneOf(['red-800']),
        _pt.oneOf(['red-900']),
        _pt.oneOf(['orange-100']),
        _pt.oneOf(['orange-200']),
        _pt.oneOf(['orange-300']),
        _pt.oneOf(['orange-400']),
        _pt.oneOf(['orange-500']),
        _pt.oneOf(['orange-600']),
        _pt.oneOf(['orange-700']),
        _pt.oneOf(['orange-800']),
        _pt.oneOf(['orange-900']),
        _pt.oneOf(['yellow-100']),
        _pt.oneOf(['yellow-200']),
        _pt.oneOf(['yellow-300']),
        _pt.oneOf(['yellow-400']),
        _pt.oneOf(['yellow-500']),
        _pt.oneOf(['yellow-600']),
        _pt.oneOf(['yellow-700']),
        _pt.oneOf(['yellow-800']),
        _pt.oneOf(['yellow-900']),
        _pt.oneOf(['green-100']),
        _pt.oneOf(['green-200']),
        _pt.oneOf(['green-300']),
        _pt.oneOf(['green-400']),
        _pt.oneOf(['green-500']),
        _pt.oneOf(['green-600']),
        _pt.oneOf(['green-700']),
        _pt.oneOf(['green-800']),
        _pt.oneOf(['green-900']),
        _pt.oneOf(['teal-100']),
        _pt.oneOf(['teal-200']),
        _pt.oneOf(['teal-300']),
        _pt.oneOf(['teal-400']),
        _pt.oneOf(['teal-500']),
        _pt.oneOf(['teal-600']),
        _pt.oneOf(['teal-700']),
        _pt.oneOf(['teal-800']),
        _pt.oneOf(['teal-900']),
        _pt.oneOf(['blue-100']),
        _pt.oneOf(['blue-200']),
        _pt.oneOf(['blue-300']),
        _pt.oneOf(['blue-400']),
        _pt.oneOf(['blue-500']),
        _pt.oneOf(['blue-600']),
        _pt.oneOf(['blue-700']),
        _pt.oneOf(['blue-800']),
        _pt.oneOf(['blue-900']),
        _pt.oneOf(['indigo-100']),
        _pt.oneOf(['indigo-200']),
        _pt.oneOf(['indigo-300']),
        _pt.oneOf(['indigo-400']),
        _pt.oneOf(['indigo-500']),
        _pt.oneOf(['indigo-600']),
        _pt.oneOf(['indigo-700']),
        _pt.oneOf(['indigo-800']),
        _pt.oneOf(['indigo-900']),
        _pt.oneOf(['purple-100']),
        _pt.oneOf(['purple-200']),
        _pt.oneOf(['purple-300']),
        _pt.oneOf(['purple-400']),
        _pt.oneOf(['purple-500']),
        _pt.oneOf(['purple-600']),
        _pt.oneOf(['purple-700']),
        _pt.oneOf(['purple-800']),
        _pt.oneOf(['purple-900']),
        _pt.oneOf(['pink-100']),
        _pt.oneOf(['pink-200']),
        _pt.oneOf(['pink-300']),
        _pt.oneOf(['pink-400']),
        _pt.oneOf(['pink-500']),
        _pt.oneOf(['pink-600']),
        _pt.oneOf(['pink-700']),
        _pt.oneOf(['pink-800']),
        _pt.oneOf(['pink-900']),
        _pt.oneOf(['solid']),
        _pt.oneOf(['dashed']),
        _pt.oneOf(['dotted']),
        _pt.oneOf(['double']),
        _pt.oneOf(['none']),
        _pt.oneOf(['0']),
        _pt.oneOf([2]),
        _pt.oneOf([4]),
        _pt.oneOf([8]),
        _pt.oneOf(['t-0']),
        _pt.oneOf(['r-0']),
        _pt.oneOf(['b-0']),
        _pt.oneOf(['l-0']),
        _pt.oneOf(['t-2']),
        _pt.oneOf(['r-2']),
        _pt.oneOf(['b-2']),
        _pt.oneOf(['l-2']),
        _pt.oneOf(['t-4']),
        _pt.oneOf(['r-4']),
        _pt.oneOf(['b-4']),
        _pt.oneOf(['l-4']),
        _pt.oneOf(['t-8']),
        _pt.oneOf(['r-8']),
        _pt.oneOf(['b-8']),
        _pt.oneOf(['l-8']),
        _pt.oneOf(['t']),
        _pt.oneOf(['r']),
        _pt.oneOf(['b']),
        _pt.oneOf(['l']),
        _pt.bool,
      ])
    ),
  ]),
  rounded: _pt.oneOfType([
    _pt.oneOfType([
      _pt.bool,
      _pt.oneOf(['none']),
      _pt.oneOf(['sm']),
      _pt.oneOf(['lg']),
      _pt.oneOf(['full']),
      _pt.oneOf(['t-none']),
      _pt.oneOf(['r-none']),
      _pt.oneOf(['b-none']),
      _pt.oneOf(['l-none']),
      _pt.oneOf(['t-sm']),
      _pt.oneOf(['r-sm']),
      _pt.oneOf(['b-sm']),
      _pt.oneOf(['l-sm']),
      _pt.oneOf(['t']),
      _pt.oneOf(['r']),
      _pt.oneOf(['b']),
      _pt.oneOf(['l']),
      _pt.oneOf(['t-lg']),
      _pt.oneOf(['r-lg']),
      _pt.oneOf(['b-lg']),
      _pt.oneOf(['l-lg']),
      _pt.oneOf(['t-full']),
      _pt.oneOf(['r-full']),
      _pt.oneOf(['b-full']),
      _pt.oneOf(['l-full']),
      _pt.oneOf(['tl-none']),
      _pt.oneOf(['tr-none']),
      _pt.oneOf(['br-none']),
      _pt.oneOf(['bl-none']),
      _pt.oneOf(['tl-sm']),
      _pt.oneOf(['tr-sm']),
      _pt.oneOf(['br-sm']),
      _pt.oneOf(['bl-sm']),
      _pt.oneOf(['tl']),
      _pt.oneOf(['tr']),
      _pt.oneOf(['br']),
      _pt.oneOf(['bl']),
      _pt.oneOf(['tl-lg']),
      _pt.oneOf(['tr-lg']),
      _pt.oneOf(['br-lg']),
      _pt.oneOf(['bl-lg']),
      _pt.oneOf(['tl-full']),
      _pt.oneOf(['tr-full']),
      _pt.oneOf(['br-full']),
      _pt.oneOf(['bl-full']),
    ]),
    _pt.arrayOf(
      _pt.oneOfType([
        _pt.bool,
        _pt.oneOf(['none']),
        _pt.oneOf(['sm']),
        _pt.oneOf(['lg']),
        _pt.oneOf(['full']),
        _pt.oneOf(['t-none']),
        _pt.oneOf(['r-none']),
        _pt.oneOf(['b-none']),
        _pt.oneOf(['l-none']),
        _pt.oneOf(['t-sm']),
        _pt.oneOf(['r-sm']),
        _pt.oneOf(['b-sm']),
        _pt.oneOf(['l-sm']),
        _pt.oneOf(['t']),
        _pt.oneOf(['r']),
        _pt.oneOf(['b']),
        _pt.oneOf(['l']),
        _pt.oneOf(['t-lg']),
        _pt.oneOf(['r-lg']),
        _pt.oneOf(['b-lg']),
        _pt.oneOf(['l-lg']),
        _pt.oneOf(['t-full']),
        _pt.oneOf(['r-full']),
        _pt.oneOf(['b-full']),
        _pt.oneOf(['l-full']),
        _pt.oneOf(['tl-none']),
        _pt.oneOf(['tr-none']),
        _pt.oneOf(['br-none']),
        _pt.oneOf(['bl-none']),
        _pt.oneOf(['tl-sm']),
        _pt.oneOf(['tr-sm']),
        _pt.oneOf(['br-sm']),
        _pt.oneOf(['bl-sm']),
        _pt.oneOf(['tl']),
        _pt.oneOf(['tr']),
        _pt.oneOf(['br']),
        _pt.oneOf(['bl']),
        _pt.oneOf(['tl-lg']),
        _pt.oneOf(['tr-lg']),
        _pt.oneOf(['br-lg']),
        _pt.oneOf(['bl-lg']),
        _pt.oneOf(['tl-full']),
        _pt.oneOf(['tr-full']),
        _pt.oneOf(['br-full']),
        _pt.oneOf(['bl-full']),
      ])
    ),
  ]),
  roundedT: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedR: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedB: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedL: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedTl: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedTr: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedBr: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  roundedBl: _pt.oneOfType([
    _pt.oneOf(['none', 'sm', 'lg', 'full']),
    _pt.arrayOf(_pt.oneOf(['none', 'sm', 'lg', 'full'])),
  ]),
  shadow: _pt.oneOfType([
    _pt.oneOfType([
      _pt.bool,
      _pt.oneOf(['md']),
      _pt.oneOf(['lg']),
      _pt.oneOf(['xl']),
      _pt.oneOf(['2xl']),
      _pt.oneOf(['inner']),
      _pt.oneOf(['outline']),
      _pt.oneOf(['none']),
    ]),
    _pt.arrayOf(
      _pt.oneOfType([
        _pt.bool,
        _pt.oneOf(['md']),
        _pt.oneOf(['lg']),
        _pt.oneOf(['xl']),
        _pt.oneOf(['2xl']),
        _pt.oneOf(['inner']),
        _pt.oneOf(['outline']),
        _pt.oneOf(['none']),
      ])
    ),
  ]),
  cursor: _pt.oneOfType([
    _pt.oneOf([
      'auto',
      'default',
      'pointer',
      'wait',
      'text',
      'move',
      'not-allowed',
    ]),
    _pt.arrayOf(
      _pt.oneOf([
        'auto',
        'default',
        'pointer',
        'wait',
        'text',
        'move',
        'not-allowed',
      ])
    ),
  ]),
  block: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  inlineBlock: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  inline: _pt.oneOfType([_pt.bool, _pt.arrayOf(_pt.bool)]),
  flex: _pt.oneOfType([
    _pt.oneOfType([
      _pt.bool,
      _pt.oneOf([1]),
      _pt.oneOf(['auto']),
      _pt.oneOf(['initial']),
      _pt.oneOf(['none']),
      _pt.oneOf(['row']),
      _pt.oneOf(['row-reverse']),
      _pt.oneOf(['col']),
      _pt.oneOf(['col-reverse']),
      _pt.oneOf(['grow-0']),
      _pt.oneOf(['grow']),
      _pt.oneOf(['shrink-0']),
      _pt.oneOf(['shrink']),
      _pt.oneOf(['wrap']),
      _pt.oneOf(['wrap-reverse']),
      _pt.oneOf(['no-wrap']),
    ]),
    _pt.arrayOf(
      _pt.oneOfType([
        _pt.bool,
        _pt.oneOf([1]),
        _pt.oneOf(['auto']),
        _pt.oneOf(['initial']),
        _pt.oneOf(['none']),
        _pt.oneOf(['row']),
        _pt.oneOf(['row-reverse']),
        _pt.oneOf(['col']),
        _pt.oneOf(['col-reverse']),
        _pt.oneOf(['grow-0']),
        _pt.oneOf(['grow']),
        _pt.oneOf(['shrink-0']),
        _pt.oneOf(['shrink']),
        _pt.oneOf(['wrap']),
        _pt.oneOf(['wrap-reverse']),
        _pt.oneOf(['no-wrap']),
      ])
    ),
  ]),
}
export default Tw
